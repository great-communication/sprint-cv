@{
    Page.Title = "Create CV";
    Layout = "~/_SiteLayout.cshtml";

    var activeTab = 0;
    var placeholderText = "Example: Graphic Designer with +2 years of experience in a fast-paced startup environment. Proficient with the Adobe Creative Suite and web design. Seeking to bring fast, intelligent solutions to your company. Have a Bachelor's Degree in Graphic Design.";
    var accordionIndexExperience = "false";
    var accordionIndexEducation = "false";
    CurrentUser user = new CurrentUser();
    var error = false;
    var errorMsg = "";
    var maxSections = 50; //If changed here, then need to change in external jQuery scripts as well

    CV cv = new CV(user);


    if (IsPost) //Is always post, because the link to this page is from a form action with method=post
    {
        var CVToEdit = Request["CVToEdit"];
        if (CVToEdit == "create new")
        {
            if (!user.HasTooManyCVs())
            {
                cv.CreateNewCV();
            }
            else
            {
                error = true;
                errorMsg = "<div class='field-validation-error'>Error: Could not create new CV. UserLimit exceeded.</div>";
            }
        }
        else if (CVToEdit != null)
        {
            cv.LoadCV(CVToEdit);
        }
        else
        {
            //Update CV
            //Request form data
            activeTab = Request["tab-index"].AsInt();
            accordionIndexExperience = Request["experience-accordion-index"];
            accordionIndexEducation = Request["education-accordion-index"];

            var CVId = Request["cv-id"];
            if (CVId != "" && CVId != null)
            {
                var DocumentName = Request["cv-name"];
                var FirstName = Request["first-name"];
                var LastName = Request["last-name"];
                var Email = Request["email"];
                var PhoneNumber = Request["phone"];
                var Website = Request["website"];
                var Address = Request["address"];
                var Summary = Request["summary"];
                var Theme = Request["theme"];
                var Complete = Request["complete"];

                //Check if there are experience records
                var experienceCount = Request["experience-count"].AsInt();
                if (experienceCount <= maxSections)
                {
                    List<Experience> exp = new List<Experience>();
                    var expToBeDeletedSer = Request["experience-to-be-deleted"];
                    string[] expToBeDeleted = expToBeDeletedSer.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
                    cv.DeleteExperiences(CVId, expToBeDeleted);

                    for (int i = 0; i < experienceCount; i++)
                    {
                        var id = (i + 1).ToString();  //+1 to convert arrayIndex to id

                        var startDate = Request["start-date-experience-" + id];
                        var endDate = Request["end-date-experience-" + id];
                        var position = Request["position-experience-" + id];
                        var company = Request["company-experience-" + id];
                        var experience = Request["experience-experience-" + id];
                        Experience temp = new Experience(id, startDate, endDate, position, company, experience);
                        exp.Add(temp);
                    }


                    //Check if there are education records
                    var educationCount = Request["education-count"].AsInt();
                    if (educationCount <= maxSections)
                    {
                        List<Education> edu = new List<Education>(); ;
                        var eduToBeDeletedSer = Request["education-to-be-deleted"];
                        string[] eduToBeDeleted = eduToBeDeletedSer.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
                        cv.DeleteEducations(CVId, eduToBeDeleted);

                        for (int i = 0; i < educationCount; i++)
                        {
                            var id = (i + 1).ToString();  //+1 to convert arrayIndex to id

                            var startDate = Request["start-date-education-" + id];
                            var endDate = Request["end-date-education-" + id];
                            var degree = Request["position-education-" + id];
                            var school = Request["company-education-" + id];
                            var summary = Request["education-education-" + id];
                            Education temp = new Education(id, startDate, endDate, degree, school, summary);
                            edu.Add(temp);
                        }

                        cv.UpdateCV(CVId, DocumentName, FirstName, LastName, Email, PhoneNumber, Website, Address, Summary, Theme, Complete, exp, edu);

                        //If done with editing, send user to CV overview page
                        var Done = Request["done"].AsBool();
                        if (Done)
                        {
                            Response.Redirect("~/Members/CVs.cshtml");
                        }
                    }
                    else
                    {
                        error = true;
                        errorMsg = "<div class='field-validation-error'>Error: Data overflow.</div>";
                    }
                }
                else
                {
                    error = true;
                    errorMsg = "<div class='field-validation-error'>Error: Data overflow.</div>";
                }
            }
            else
            {
                error = true;
                errorMsg = "<div class='field-validation-error'>Error: Could not find CV</div>";
            }
        }
    }

}

@if (!error)
{
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/jquery-1.4.4.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui-1.8.24.min.js" type="text/javascript"></script>
    <script src="~/Scripts/create-cv-script.js" type="text/javascript"></script>
    <script src="~/Scripts/create-accordion-experience.js" type="text/javascript"></script>
    <script src="~/Scripts/create-accordion-education.js" type="text/javascript"></script>
    <script src="~/Scripts/cv-themes.js" type="text/javascript"></script>

    <script type="text/javascript">
        //Global JS variables
        var activeTab = @activeTab;

        var accordionIndexExperience = @accordionIndexExperience;
        var accordionSectionCountExperience = @cv.experiences.Count;
        var idCountExperience = @cv.experiences.Count;

        var accordionIndexEducation = @accordionIndexEducation;
        var accordionSectionCountEducation = @cv.educations.Count;
        var idCountEducation = @cv.educations.Count;

        $(function () {
            //Start with current theme selected in dropdown
            $('[name=theme] option').filter(function() {
                return ($(this).text() == '@cv.Theme');
            }).prop('selected', true);
            //
            var theme = $('#theme-selector :selected').text();
            var cv = assembleCVFromInputs();
            var styledCV = styleCV(theme, cv);
            $('#finished-cv').html(styledCV);
            $('#cv-container').css({ 'border': "1px solid #aaaaaa" });

            $('#theme-selector').on('change', function () {
                var theme = $('#theme-selector :selected').text();
                var cv = assembleCVFromInputs();
                var styledCV = styleCV(theme, cv);
                $('#finished-cv').html(styledCV);
                $('#cv-container').css({ 'border': "1px solid #aaaaaa" });
                $('#save-reminder-3').html('Not saved!');
            });
        });

        function assembleCVFromInputs() {
            var cv = {
                documentName: $('[name=cv-name]').val(),
                firstName: $('[name=first-name]').val(),
                lastName: $('[name=last-name]').val(),
                email: $('[name=email]').val(),
                phoneNumber: $('[name=phone]').val(),
                website: $('[name=website]').val(),
                address: $('[name=address]').text(),
                summary: $('[name=summary]').text(),
                educations: assembleEducationsFromInputs(),
                experiences: assembleExperiencesFromInputs()
            };

            return cv;
        }

        function assembleEducationsFromInputs() {
            var educations = [];
            for (let i = 1; i <= accordionSectionCountEducation; i++) {
                var education = {
                    startDate: $('[name=start-date-education-' + i + ']').val(),
                    endDate: $('[name=end-date-education-' + i + ']').val(),
                    position: $('[name=position-education-' + i + ']').val(),
                    company: $('[name=company-education-' + i + ']').val(),
                    summary: $('[name=education-education-' + i + ']').text()
                };

                educations.push(education);
            }

            return educations;
        }

        function assembleExperiencesFromInputs() {
            var experiences = [];
            for (let i = 1; i <= accordionSectionCountExperience; i++) {
                var experience = {
                    startDate: $('[name=start-date-experience-' + i + ']').val(),
                    endDate: $('[name=end-date-experience-' + i + ']').val(),
                    position: $('[name=position-experience-' + i + ']').val(),
                    company: $('[name=company-experience-' + i + ']').val(),
                    summary: $('[name=experience-experience-' + i + ']').text()
                };

                experiences.push(experience);
            }

            return experiences;
        }
    </script>

    <h2>Create a new CV</h2><br />
    <div class="CVform">

        <div id="tabs">

            <ul id="tabheader">
                <li><a href="#tabs-1">Basic information</a></li>
                <li><a href="#tabs-2">Summary</a></li>
                <li><a href="#tabs-3">Experience</a></li>
                <li><a href="#tabs-4">Education</a></li>
                <li><a href="#tabs-5">Review</a></li>
            </ul>
            <form id="cv-form" form action="" method="post">
                <div id="tabs-1" class="tabborder">
                    <table>
                        <tbody>
                            <tr><td><label for="first-name">First name:</label></td><td><input id="first-name" name="first-name" type="text" value="@cv.FirstName" /></td></tr>
                            <tr><td><label for="last-name">Last name:</label></td><td><input id="last-name" name="last-name" type="text" value="@cv.LastName" /></td></tr>
                            <tr><td><label for="email">Email: </label></td><td><input id="email" name="email" type="text" value="@cv.Email" /></td></tr>
                            <tr><td><label for="phone">Phone number:</label></td><td><input id="phone" name="phone" type="text" value="@cv.PhoneNumber" /></td></tr>
                            <tr><td><label for="website">Website:</label></td><td><input id="website" name="website" type="text" value="@cv.Website" /></td></tr>
                            <tr><td><label for="address">Address: </label></td><td><textarea id="address" name="address" class="textarea-small preserve-whitespace" rows="3" cols="5">@cv.Address</textarea></td></tr>

                        </tbody>
                    </table>

                    <div><input class="btn save-block" id="save-button" type="submit" value="Save" /><div id="save-reminder" class="save-block field-validation-error"></div></div>
                </div>

                <div id="tabs-2" class="tabborder">
                    <p><label class="testResultText">A summary is a short introduction highlighting your career progress, achievements and skill set.</label></p>
                    <textarea id="summary" class="textarea-big" rows="5" cols="20" placeholder="@placeholderText" name="summary">@cv.Summary</textarea>
                    <div><input class="btn save-block" id="save-button-2" type="submit" value="Save" /><div id="save-reminder-2" class="save-block field-validation-error"></div></div>

                </div>
                <input id="cv-id" type="hidden" name="cv-id" value="@cv.Id" />
                <input id="tab-index" type="hidden" name="tab-index" value="@activeTab" />

                <input id="experience-accordion-index" type="hidden" name="experience-accordion-index" value="@accordionIndexExperience" />
                <input id="experience-count" type="hidden" name="experience-count" value="@cv.experiences.Count" />
                <input id="experience-to-be-deleted" type="hidden" name="experience-to-be-deleted" value="" />

                <input id="education-accordion-index" type="hidden" name="education-accordion-index" value="@accordionIndexEducation" />
                <input id="education-count" type="hidden" name="education-count" value="@cv.educations.Count" />
                <input id="education-to-be-deleted" type="hidden" name="education-to-be-deleted" value="" />

                <div id="tabs-3" class="tabborder">
                    <div id="accordion-experience">
                        @foreach (var e in cv.experiences){
                            <text>
                                <h3 id="headline-experience-@Html.Raw(e.Id)">
                                    <span id="headline-position-experience-@Html.Raw(e.Id)" class="same-row">@Html.Raw(e.Position)</span><span> – </span>
                                    <span id="headline-company-experience-@Html.Raw(e.Id)" class="same-row">@Html.Raw(e.Company)</span>
                                    <span id="delete-experience-@Html.Raw(e.Id)" class="ui-icon ui-icon-circle-close float-right same-row"></span>
                                    <span id="move-down-experience-@Html.Raw(e.Id)" class="ui-icon ui-icon-circle-arrow-s float-right same-row"></span>
                                    <span id="move-up-experience-@Html.Raw(e.Id)" class="ui-icon ui-icon-circle-arrow-n float-right same-row"></span>
                                </h3>
                                <div id="section-experience-@Html.Raw(e.Id)">
                                    <table>
                                        <tbody>
                                            <tr><td><label> From:</label></td><td><input id="start-date-experience-@Html.Raw(e.Id)" class="datepicker" type="text" name="start-date-experience-@Html.Raw(e.Id)" value="@Html.Raw(e.StartDate)" /></td></tr>
                                            <tr><td><label> To:</label></td><td><input id="end-date-experience-@Html.Raw(e.Id)" class="datepicker" type="text" name="end-date-experience-@Html.Raw(e.Id)" value="@Html.Raw(e.EndDate)" /></td></tr>
                                            <tr><td><label> Position:</label></td><td><input id="position-experience-@Html.Raw(e.Id)" type="text" name="position-experience-@Html.Raw(e.Id)" value="@Html.Raw(e.Position)" /></td></tr>
                                            <tr><td><label> Company:</label></td><td><input id="company-experience-@Html.Raw(e.Id)" type="text" name="company-experience-@Html.Raw(e.Id)" value="@Html.Raw(e.Company)" /></td></tr>
                                            <tr><td><label> Description: </label></td><td><textarea id="experience-experience-@Html.Raw(e.Id)" class="textarea-small" rows="3" cols="5" name="experience-experience-@Html.Raw(e.Id)">@Html.Raw(cv.ReplaceLineBreaks(e.Summary))</textarea></td></tr>
                                        </tbody>
                                    </table>
                                </div>                                
                            </text>
                        }
                    </div>
                    <div>
                        <button id="add-accordion-experience" class="btn" type="button">Add</button><input class="btn save-block" id="save-button-experience" type="submit" value="Save" /><div id="save-reminder-experience" class="save-block field-validation-error"></div>
                    </div>
                </div>

                <div id="tabs-4" class="tabborder">
                    <div id="accordion-education">
                        @foreach (var e in cv.educations){
                            <text>
                                <h3 id="headline-education-@Html.Raw(e.Id)">
                                    <span id="headline-position-education-@Html.Raw(e.Id)" class="same-row">@Html.Raw(e.Degree)</span><span> – </span>
                                    <span id="headline-company-education-@Html.Raw(e.Id)" class="same-row">@Html.Raw(e.School)</span>
                                    <span id="delete-education-@Html.Raw(e.Id)" class="ui-icon ui-icon-circle-close float-right same-row"></span>
                                    <span id="move-down-education-@Html.Raw(e.Id)" class="ui-icon ui-icon-circle-arrow-s float-right same-row"></span>
                                    <span id="move-up-education-@Html.Raw(e.Id)" class="ui-icon ui-icon-circle-arrow-n float-right same-row"></span>
                                </h3>
                                <div id="section-education-@Html.Raw(e.Id)">
                                    <table>
                                        <tbody>
                                            <tr><td><label> From:</label></td><td><input id="start-date-education-@Html.Raw(e.Id)" class="datepicker" type="text" name="start-date-education-@Html.Raw(e.Id)" value="@Html.Raw(e.StartDate)" /></td></tr>
                                            <tr><td><label> To:</label></td><td><input id="end-date-education-@Html.Raw(e.Id)" class="datepicker" type="text" name="end-date-education-@Html.Raw(e.Id)" value="@Html.Raw(e.EndDate)" /></td></tr>
                                            <tr><td><label> Degree/Course:</label></td><td><input id="position-education-@Html.Raw(e.Id)" type="text" name="position-education-@Html.Raw(e.Id)" value="@Html.Raw(e.Degree)" /></td></tr>
                                            <tr><td><label> Institution:</label></td><td><input id="company-education-@Html.Raw(e.Id)" type="text" name="company-education-@Html.Raw(e.Id)" value="@Html.Raw(e.School)" /></td></tr>
                                            <tr><td><label> Description: </label></td><td><textarea id="education-education-@Html.Raw(e.Id)" class="textarea-small" rows="3" cols="5" name="education-education-@Html.Raw(e.Id)">@Html.Raw(cv.ReplaceLineBreaks(e.Summary))</textarea></td></tr>
                                        </tbody>
                                    </table>
                                </div> 
                            </text>                            
                        }                        
                    </div>
                    <div>
                        <button id="add-accordion-education" class="btn" type="button">Add</button><input class="btn save-block" id="save-button-education" type="submit" value="Save" /><div id="save-reminder-education" class="save-block field-validation-error"></div>
                    </div>
                </div>
                <div id="tabs-5" class="tabborder">
                    <div>
                        Theme: <select id="theme-selector" name="theme">
                            <option>Default</option>
                            <option>Corporate</option>
                        </select>
                    </div>
                    
                    <div id="finished-cv"></div>

                    <label for="cv-name">Name your CV:</label>
                    <input id="cv-name" name="cv-name" type="text" value="@cv.DocumentName" />
                    <input id="complete" type="hidden" name="complete" value="@cv.Complete.ToString()" />
                    <input id="done" type="hidden" name="done" value="false" />
                    <div><button class="btn" id="complete-button" type="button">Complete</button><div id="save-reminder-3" class="save-block field-validation-error"></div></div>
                </div>
            </form>
        </div>
    </div>
}
else
{
    @Html.Raw(errorMsg)
}

